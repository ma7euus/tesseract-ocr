<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="95">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="api">
        <in>apitypes.h</in>
        <in>baseapi.cpp</in>
        <in>baseapi.h</in>
        <in>capi.cpp</in>
        <in>capi.h</in>
        <in>tesseractmain.cpp</in>
        <in>tesseractmain.h</in>
      </df>
      <df name="autom4te.cache">
      </df>
      <df name="ccmain">
        <in>adaptions.cpp</in>
        <in>applybox.cpp</in>
        <in>control.cpp</in>
        <in>control.h</in>
        <in>cube_control.cpp</in>
        <in>cube_reco_context.cpp</in>
        <in>cube_reco_context.h</in>
        <in>cubeclassifier.cpp</in>
        <in>cubeclassifier.h</in>
        <in>docqual.cpp</in>
        <in>docqual.h</in>
        <in>equationdetect.cpp</in>
        <in>equationdetect.h</in>
        <in>fixspace.cpp</in>
        <in>fixspace.h</in>
        <in>fixxht.cpp</in>
        <in>imgscale.cpp</in>
        <in>imgscale.h</in>
        <in>ltrresultiterator.cpp</in>
        <in>ltrresultiterator.h</in>
        <in>mutableiterator.h</in>
        <in>osdetect.cpp</in>
        <in>osdetect.h</in>
        <in>output.cpp</in>
        <in>output.h</in>
        <in>pageiterator.cpp</in>
        <in>pageiterator.h</in>
        <in>pagesegmain.cpp</in>
        <in>pagewalk.cpp</in>
        <in>paragraphs.cpp</in>
        <in>paragraphs.h</in>
        <in>paragraphs_internal.h</in>
        <in>paramsd.cpp</in>
        <in>paramsd.h</in>
        <in>pgedit.cpp</in>
        <in>pgedit.h</in>
        <in>recogtraining.cpp</in>
        <in>reject.cpp</in>
        <in>reject.h</in>
        <in>resultiterator.cpp</in>
        <in>resultiterator.h</in>
        <in>scaleimg.cpp</in>
        <in>scaleimg.h</in>
        <in>tessbox.cpp</in>
        <in>tessbox.h</in>
        <in>tessedit.cpp</in>
        <in>tessedit.h</in>
        <in>tesseract_cube_combiner.cpp</in>
        <in>tesseract_cube_combiner.h</in>
        <in>tesseractclass.cpp</in>
        <in>tesseractclass.h</in>
        <in>tessvars.cpp</in>
        <in>tessvars.h</in>
        <in>tfacep.h</in>
        <in>tfacepp.cpp</in>
        <in>tfacepp.h</in>
        <in>thresholder.cpp</in>
        <in>thresholder.h</in>
        <in>werdit.cpp</in>
        <in>werdit.h</in>
      </df>
      <df name="ccstruct">
        <in>blckerr.h</in>
        <in>blobbox.cpp</in>
        <in>blobbox.h</in>
        <in>blobs.cpp</in>
        <in>blobs.h</in>
        <in>blread.cpp</in>
        <in>blread.h</in>
        <in>boxread.cpp</in>
        <in>boxread.h</in>
        <in>boxword.cpp</in>
        <in>boxword.h</in>
        <in>ccstruct.cpp</in>
        <in>ccstruct.h</in>
        <in>coutln.cpp</in>
        <in>coutln.h</in>
        <in>crakedge.h</in>
        <in>detlinefit.cpp</in>
        <in>detlinefit.h</in>
        <in>dppoint.cpp</in>
        <in>dppoint.h</in>
        <in>fontinfo.cpp</in>
        <in>fontinfo.h</in>
        <in>genblob.cpp</in>
        <in>genblob.h</in>
        <in>hpddef.h</in>
        <in>hpdsizes.h</in>
        <in>ipoints.h</in>
        <in>linlsq.cpp</in>
        <in>linlsq.h</in>
        <in>matrix.cpp</in>
        <in>matrix.h</in>
        <in>mod128.cpp</in>
        <in>mod128.h</in>
        <in>normalis.cpp</in>
        <in>normalis.h</in>
        <in>ocrblock.cpp</in>
        <in>ocrblock.h</in>
        <in>ocrpara.cpp</in>
        <in>ocrpara.h</in>
        <in>ocrrow.cpp</in>
        <in>ocrrow.h</in>
        <in>otsuthr.cpp</in>
        <in>otsuthr.h</in>
        <in>pageres.cpp</in>
        <in>pageres.h</in>
        <in>params_training_featdef.h</in>
        <in>pdblock.cpp</in>
        <in>pdblock.h</in>
        <in>points.cpp</in>
        <in>points.h</in>
        <in>polyaprx.cpp</in>
        <in>polyaprx.h</in>
        <in>polyblk.cpp</in>
        <in>polyblk.h</in>
        <in>publictypes.cpp</in>
        <in>publictypes.h</in>
        <in>quadlsq.cpp</in>
        <in>quadlsq.h</in>
        <in>quadratc.cpp</in>
        <in>quadratc.h</in>
        <in>quspline.cpp</in>
        <in>quspline.h</in>
        <in>ratngs.cpp</in>
        <in>ratngs.h</in>
        <in>rect.cpp</in>
        <in>rect.h</in>
        <in>rejctmap.cpp</in>
        <in>rejctmap.h</in>
        <in>seam.cpp</in>
        <in>seam.h</in>
        <in>split.cpp</in>
        <in>split.h</in>
        <in>statistc.cpp</in>
        <in>statistc.h</in>
        <in>stepblob.cpp</in>
        <in>stepblob.h</in>
        <in>vecfuncs.cpp</in>
        <in>vecfuncs.h</in>
        <in>werd.cpp</in>
        <in>werd.h</in>
      </df>
      <df name="ccutil">
        <in>ambigs.cpp</in>
        <in>ambigs.h</in>
        <in>basedir.cpp</in>
        <in>basedir.h</in>
        <in>bits16.cpp</in>
        <in>bits16.h</in>
        <in>bitvector.cpp</in>
        <in>bitvector.h</in>
        <in>ccutil.cpp</in>
        <in>ccutil.h</in>
        <in>clst.cpp</in>
        <in>clst.h</in>
        <in>elst.cpp</in>
        <in>elst.h</in>
        <in>elst2.cpp</in>
        <in>elst2.h</in>
        <in>errcode.cpp</in>
        <in>errcode.h</in>
        <in>fileerr.h</in>
        <in>genericvector.h</in>
        <in>globaloc.cpp</in>
        <in>globaloc.h</in>
        <in>hashfn.cpp</in>
        <in>hashfn.h</in>
        <in>helpers.h</in>
        <in>host.h</in>
        <in>hosthplb.h</in>
        <in>indexmapbidi.cpp</in>
        <in>indexmapbidi.h</in>
        <in>lsterr.h</in>
        <in>mainblk.cpp</in>
        <in>memry.cpp</in>
        <in>memry.h</in>
        <in>mfcpch.cpp</in>
        <in>mfcpch.h</in>
        <in>ndminx.h</in>
        <in>notdll.h</in>
        <in>nwmain.h</in>
        <in>ocrclass.h</in>
        <in>params.cpp</in>
        <in>params.h</in>
        <in>platform.h</in>
        <in>qrsequence.h</in>
        <in>scanutils.cpp</in>
        <in>scanutils.h</in>
        <in>secname.h</in>
        <in>serialis.cpp</in>
        <in>serialis.h</in>
        <in>sorthelper.h</in>
        <in>stderr.h</in>
        <in>strngs.cpp</in>
        <in>strngs.h</in>
        <in>tesscallback.h</in>
        <in>tessdatamanager.cpp</in>
        <in>tessdatamanager.h</in>
        <in>tprintf.cpp</in>
        <in>tprintf.h</in>
        <in>unichar.cpp</in>
        <in>unichar.h</in>
        <in>unicharmap.cpp</in>
        <in>unicharmap.h</in>
        <in>unicharset.cpp</in>
        <in>unicharset.h</in>
        <in>unicity_table.h</in>
        <in>unicodes.cpp</in>
        <in>unicodes.h</in>
      </df>
      <df name="classify">
        <in>adaptive.cpp</in>
        <in>adaptive.h</in>
        <in>adaptmatch.cpp</in>
        <in>baseline.h</in>
        <in>blobclass.cpp</in>
        <in>blobclass.h</in>
        <in>chartoname.cpp</in>
        <in>chartoname.h</in>
        <in>classify.cpp</in>
        <in>classify.h</in>
        <in>cluster.cpp</in>
        <in>cluster.h</in>
        <in>clusttool.cpp</in>
        <in>clusttool.h</in>
        <in>cutoffs.cpp</in>
        <in>cutoffs.h</in>
        <in>errorcounter.cpp</in>
        <in>errorcounter.h</in>
        <in>extern.h</in>
        <in>extract.cpp</in>
        <in>extract.h</in>
        <in>featdefs.cpp</in>
        <in>featdefs.h</in>
        <in>flexfx.cpp</in>
        <in>flexfx.h</in>
        <in>float2int.cpp</in>
        <in>float2int.h</in>
        <in>fpoint.cpp</in>
        <in>fpoint.h</in>
        <in>fxdefs.cpp</in>
        <in>fxdefs.h</in>
        <in>intfeaturedist.cpp</in>
        <in>intfeaturedist.h</in>
        <in>intfeaturemap.cpp</in>
        <in>intfeaturemap.h</in>
        <in>intfeaturespace.cpp</in>
        <in>intfeaturespace.h</in>
        <in>intfx.cpp</in>
        <in>intfx.h</in>
        <in>intmatcher.cpp</in>
        <in>intmatcher.h</in>
        <in>intproto.cpp</in>
        <in>intproto.h</in>
        <in>kdtree.cpp</in>
        <in>kdtree.h</in>
        <in>mastertrainer.cpp</in>
        <in>mastertrainer.h</in>
        <in>mf.cpp</in>
        <in>mf.h</in>
        <in>mfdefs.cpp</in>
        <in>mfdefs.h</in>
        <in>mfoutline.cpp</in>
        <in>mfoutline.h</in>
        <in>mfx.cpp</in>
        <in>mfx.h</in>
        <in>normfeat.cpp</in>
        <in>normfeat.h</in>
        <in>normmatch.cpp</in>
        <in>normmatch.h</in>
        <in>ocrfeatures.cpp</in>
        <in>ocrfeatures.h</in>
        <in>outfeat.cpp</in>
        <in>outfeat.h</in>
        <in>picofeat.cpp</in>
        <in>picofeat.h</in>
        <in>protos.cpp</in>
        <in>protos.h</in>
        <in>sampleiterator.cpp</in>
        <in>sampleiterator.h</in>
        <in>shapeclassifier.h</in>
        <in>shapetable.cpp</in>
        <in>shapetable.h</in>
        <in>speckle.cpp</in>
        <in>speckle.h</in>
        <in>tessclassifier.cpp</in>
        <in>tessclassifier.h</in>
        <in>trainingsample.cpp</in>
        <in>trainingsample.h</in>
        <in>trainingsampleset.cpp</in>
        <in>trainingsampleset.h</in>
        <in>xform2d.cpp</in>
        <in>xform2d.h</in>
      </df>
      <df name="config">
      </df>
      <df name="contrib">
      </df>
      <df name="cube">
        <in>altlist.cpp</in>
        <in>altlist.h</in>
        <in>beam_search.cpp</in>
        <in>beam_search.h</in>
        <in>bmp_8.cpp</in>
        <in>bmp_8.h</in>
        <in>cached_file.cpp</in>
        <in>cached_file.h</in>
        <in>char_altlist.cpp</in>
        <in>char_altlist.h</in>
        <in>char_bigrams.cpp</in>
        <in>char_bigrams.h</in>
        <in>char_samp.cpp</in>
        <in>char_samp.h</in>
        <in>char_samp_enum.cpp</in>
        <in>char_samp_enum.h</in>
        <in>char_samp_set.cpp</in>
        <in>char_samp_set.h</in>
        <in>char_set.cpp</in>
        <in>char_set.h</in>
        <in>classifier_base.h</in>
        <in>classifier_factory.cpp</in>
        <in>classifier_factory.h</in>
        <in>con_comp.cpp</in>
        <in>con_comp.h</in>
        <in>conv_net_classifier.cpp</in>
        <in>conv_net_classifier.h</in>
        <in>cube_const.h</in>
        <in>cube_line_object.cpp</in>
        <in>cube_line_object.h</in>
        <in>cube_line_segmenter.cpp</in>
        <in>cube_line_segmenter.h</in>
        <in>cube_object.cpp</in>
        <in>cube_object.h</in>
        <in>cube_search_object.cpp</in>
        <in>cube_search_object.h</in>
        <in>cube_tuning_params.cpp</in>
        <in>cube_tuning_params.h</in>
        <in>cube_utils.cpp</in>
        <in>cube_utils.h</in>
        <in>feature_base.h</in>
        <in>feature_bmp.cpp</in>
        <in>feature_bmp.h</in>
        <in>feature_chebyshev.cpp</in>
        <in>feature_chebyshev.h</in>
        <in>feature_hybrid.cpp</in>
        <in>feature_hybrid.h</in>
        <in>hybrid_neural_net_classifier.cpp</in>
        <in>hybrid_neural_net_classifier.h</in>
        <in>lang_mod_edge.h</in>
        <in>lang_model.h</in>
        <in>search_column.cpp</in>
        <in>search_column.h</in>
        <in>search_node.cpp</in>
        <in>search_node.h</in>
        <in>search_object.h</in>
        <in>string_32.h</in>
        <in>tess_lang_mod_edge.cpp</in>
        <in>tess_lang_mod_edge.h</in>
        <in>tess_lang_model.cpp</in>
        <in>tess_lang_model.h</in>
        <in>tuning_params.h</in>
        <in>word_altlist.cpp</in>
        <in>word_altlist.h</in>
        <in>word_list_lang_model.cpp</in>
        <in>word_list_lang_model.h</in>
        <in>word_size_model.cpp</in>
        <in>word_size_model.h</in>
        <in>word_unigrams.cpp</in>
        <in>word_unigrams.h</in>
      </df>
      <df name="cutil">
        <in>bitvec.cpp</in>
        <in>bitvec.h</in>
        <in>callcpp.cpp</in>
        <in>callcpp.h</in>
        <in>const.h</in>
        <in>cutil.cpp</in>
        <in>cutil.h</in>
        <in>cutil_class.cpp</in>
        <in>cutil_class.h</in>
        <in>danerror.cpp</in>
        <in>danerror.h</in>
        <in>efio.cpp</in>
        <in>efio.h</in>
        <in>emalloc.cpp</in>
        <in>emalloc.h</in>
        <in>freelist.cpp</in>
        <in>freelist.h</in>
        <in>globals.h</in>
        <in>listio.cpp</in>
        <in>listio.h</in>
        <in>oldheap.cpp</in>
        <in>oldheap.h</in>
        <in>oldlist.cpp</in>
        <in>oldlist.h</in>
        <in>structures.cpp</in>
        <in>structures.h</in>
        <in>tessarray.cpp</in>
        <in>tessarray.h</in>
      </df>
      <df name="dict">
        <in>context.cpp</in>
        <in>dawg.cpp</in>
        <in>dawg.h</in>
        <in>dict.cpp</in>
        <in>dict.h</in>
        <in>hyphen.cpp</in>
        <in>matchdefs.h</in>
        <in>permdawg.cpp</in>
        <in>permute.cpp</in>
        <in>permute.h</in>
        <in>states.cpp</in>
        <in>states.h</in>
        <in>stopper.cpp</in>
        <in>stopper.h</in>
        <in>trie.cpp</in>
        <in>trie.h</in>
      </df>
      <df name="doc">
      </df>
      <df name="external_libs">
        <df name="tinyxml">
          <df name="docs">
          </df>
          <in>tinystr.cpp</in>
          <in>tinystr.h</in>
          <in>tinyxml.cpp</in>
          <in>tinyxml.h</in>
          <in>tinyxmlerror.cpp</in>
          <in>tinyxmlparser.cpp</in>
          <in>xmltest.cpp</in>
        </df>
      </df>
      <df name="image">
        <in>image.cpp</in>
        <in>image.h</in>
        <in>img.h</in>
        <in>imgerrs.h</in>
        <in>imgs.cpp</in>
        <in>imgs.h</in>
        <in>imgtiff.cpp</in>
        <in>imgtiff.h</in>
        <in>imgunpk.h</in>
        <in>svshowim.cpp</in>
        <in>svshowim.h</in>
      </df>
      <df name="java">
        <df name="com">
          <df name="google">
            <df name="scrollview">
              <df name="events">
              </df>
              <df name="ui">
              </df>
            </df>
          </df>
        </df>
      </df>
      <df name="m4">
      </df>
      <df name="neural_networks">
        <df name="runtime">
          <in>input_file_buffer.cpp</in>
          <in>input_file_buffer.h</in>
          <in>neural_net.cpp</in>
          <in>neural_net.h</in>
          <in>neuron.cpp</in>
          <in>neuron.h</in>
          <in>sigmoid_table.cpp</in>
        </df>
      </df>
      <df name="po">
      </df>
      <df name="tessdata">
        <df name="configs">
        </df>
        <df name="tessconfigs">
        </df>
      </df>
      <df name="testing">
        <df name="reports">
        </df>
      </df>
      <df name="textord">
        <in>alignedblob.cpp</in>
        <in>alignedblob.h</in>
        <in>bbgrid.cpp</in>
        <in>bbgrid.h</in>
        <in>blkocc.cpp</in>
        <in>blkocc.h</in>
        <in>blobgrid.cpp</in>
        <in>blobgrid.h</in>
        <in>ccnontextdetect.cpp</in>
        <in>ccnontextdetect.h</in>
        <in>cjkpitch.cpp</in>
        <in>cjkpitch.h</in>
        <in>colfind.cpp</in>
        <in>colfind.h</in>
        <in>colpartition.cpp</in>
        <in>colpartition.h</in>
        <in>colpartitiongrid.cpp</in>
        <in>colpartitiongrid.h</in>
        <in>colpartitionset.cpp</in>
        <in>colpartitionset.h</in>
        <in>devanagari_processing.cpp</in>
        <in>devanagari_processing.h</in>
        <in>drawedg.cpp</in>
        <in>drawedg.h</in>
        <in>drawtord.cpp</in>
        <in>drawtord.h</in>
        <in>edgblob.cpp</in>
        <in>edgblob.h</in>
        <in>edgloop.cpp</in>
        <in>edgloop.h</in>
        <in>equationdetectbase.cpp</in>
        <in>equationdetectbase.h</in>
        <in>fpchop.cpp</in>
        <in>fpchop.h</in>
        <in>gap_map.cpp</in>
        <in>gap_map.h</in>
        <in>imagefind.cpp</in>
        <in>imagefind.h</in>
        <in>linefind.cpp</in>
        <in>linefind.h</in>
        <in>makerow.cpp</in>
        <in>makerow.h</in>
        <in>oldbasel.cpp</in>
        <in>oldbasel.h</in>
        <in>pithsync.cpp</in>
        <in>pithsync.h</in>
        <in>pitsync1.cpp</in>
        <in>pitsync1.h</in>
        <in>scanedg.cpp</in>
        <in>scanedg.h</in>
        <in>sortflts.cpp</in>
        <in>sortflts.h</in>
        <in>strokewidth.cpp</in>
        <in>strokewidth.h</in>
        <in>tabfind.cpp</in>
        <in>tabfind.h</in>
        <in>tablefind.cpp</in>
        <in>tablefind.h</in>
        <in>tablerecog.cpp</in>
        <in>tablerecog.h</in>
        <in>tabvector.cpp</in>
        <in>tabvector.h</in>
        <in>textlineprojection.cpp</in>
        <in>textlineprojection.h</in>
        <in>textord.cpp</in>
        <in>textord.h</in>
        <in>topitch.cpp</in>
        <in>topitch.h</in>
        <in>tordmain.cpp</in>
        <in>tordmain.h</in>
        <in>tospace.cpp</in>
        <in>tovars.cpp</in>
        <in>tovars.h</in>
        <in>underlin.cpp</in>
        <in>underlin.h</in>
        <in>wordseg.cpp</in>
        <in>wordseg.h</in>
        <in>workingpartset.cpp</in>
        <in>workingpartset.h</in>
      </df>
      <df name="training">
        <in>ambiguous_words.cpp</in>
        <in>classifier_tester.cpp</in>
        <in>cntraining.cpp</in>
        <in>combine_tessdata.cpp</in>
        <in>commontraining.cpp</in>
        <in>commontraining.h</in>
        <in>dawg2wordlist.cpp</in>
        <in>mergenf.cpp</in>
        <in>mergenf.h</in>
        <in>mftraining.cpp</in>
        <in>shapeclustering.cpp</in>
        <in>tessopt.cpp</in>
        <in>tessopt.h</in>
        <in>unicharset_extractor.cpp</in>
        <in>wordlist2dawg.cpp</in>
      </df>
      <df name="viewer">
        <in>scrollview.cpp</in>
        <in>scrollview.h</in>
        <in>svmnode.cpp</in>
        <in>svmnode.h</in>
        <in>svpaint.cpp</in>
        <in>svutil.cpp</in>
        <in>svutil.h</in>
      </df>
      <df name="vs2008">
        <df name="port">
          <in>strtok_r.cpp</in>
          <in>strtok_r.h</in>
        </df>
      </df>
      <df name="wordrec">
        <in>associate.cpp</in>
        <in>associate.h</in>
        <in>bestfirst.cpp</in>
        <in>bestfirst.h</in>
        <in>chop.cpp</in>
        <in>chop.h</in>
        <in>chopper.cpp</in>
        <in>chopper.h</in>
        <in>closed.cpp</in>
        <in>closed.h</in>
        <in>drawfx.cpp</in>
        <in>drawfx.h</in>
        <in>findseam.cpp</in>
        <in>findseam.h</in>
        <in>gradechop.cpp</in>
        <in>gradechop.h</in>
        <in>heuristic.cpp</in>
        <in>language_model.cpp</in>
        <in>language_model.h</in>
        <in>makechop.cpp</in>
        <in>makechop.h</in>
        <in>matchtab.cpp</in>
        <in>matchtab.h</in>
        <in>measure.h</in>
        <in>olutil.cpp</in>
        <in>olutil.h</in>
        <in>outlines.cpp</in>
        <in>outlines.h</in>
        <in>pieces.cpp</in>
        <in>plotedges.cpp</in>
        <in>plotedges.h</in>
        <in>plotseg.cpp</in>
        <in>plotseg.h</in>
        <in>render.cpp</in>
        <in>render.h</in>
        <in>segsearch.cpp</in>
        <in>tface.cpp</in>
        <in>wordclass.cpp</in>
        <in>wordclass.h</in>
        <in>wordrec.cpp</in>
        <in>wordrec.h</in>
      </df>
      <in>config_auto.h</in>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
